[project]
name = "chronicler"
version = "0.1.0"
description = "Telegram-based journaling system with LLM integration"
requires-python = ">=3.9"
dependencies = [
    "gitpython>=3.1.40",
    "pyyaml>=6.0.1",
    "python-telegram-bot>=20.8"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = [
    "tests/00-unit",
    "tests/01-live"
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src/chronicler",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
    "--cov-fail-under=80",
    "--cov-config=pyproject.toml"
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "scribe: mark test as scribe test",
    "storage: mark test as storage test",
    "slow: marks tests as slow running"
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
log_cli = true
log_cli_level = "DEBUG"

[tool.coverage.run]
branch = true
source = ["chronicler"]
omit = [
    "tests/*",
    "**/__init__.py",
    "setup.py"
]

[tool.coverage.paths]
source = ["src/chronicler"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
fail_under = 80
show_missing = true

[tool.coverage.html]
directory = "coverage_html"

[tool.coverage.xml]
output = "coverage.xml"

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0"
]

[tool.hatch.build]
packages = ["src/chronicler"] 